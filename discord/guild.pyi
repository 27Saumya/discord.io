from typing import Any, List, Optional, Union

from .assets import Emoji
from .enums import FormatType, ScheduledEventStatusType, ScheduledEventType
from .user import User

class Guild:
    from_dict: Any
    def __init__(self, guild: dict, rest_factory) -> None: ...
    def joined_at(self) -> str: ...
    def vanity(self) -> str: ...
    def splash(self) -> str: ...
    def discovery_splash(self) -> str: ...
    def sub_count(self) -> int: ...
    def emojis(self) -> List[Emoji]: ...
    @property
    def id(self) -> int: ...
    async def get_member(self, id: int): ...
    async def change_voice_state(
        self,
        *,
        channel: Optional[int] = ...,
        self_mute: Optional[bool] = ...,
        self_deaf: Optional[bool] = ...
    ): ...

class Role:
    from_dict: Any
    def __init__(self, data: dict) -> None: ...
    @property
    def id(self) -> int: ...
    @property
    def name(self) -> str: ...
    @property
    def color(self) -> int: ...
    def hoist(self) -> bool: ...
    def icon(self, format: Optional[FormatType] = ...) -> str: ...
    def unicode_emoji(self) -> str: ...
    @property
    def position(self) -> int: ...
    def permissions(self) -> str: ...
    def managed(self) -> bool: ...
    def mentionable(self) -> bool: ...
    def tags(self) -> str: ...

class ScheduledEvent:
    from_dict: Any
    def __init__(self, data: dict) -> None: ...
    @property
    def id(self) -> int: ...
    def guild_id(self) -> int: ...
    def channel_id(self) -> Union[int, None]: ...
    @property
    def creator(self) -> User: ...
    @property
    def name(self) -> str: ...
    @property
    def description(self) -> str: ...
    def start_time(self) -> str: ...
    def status(self) -> ScheduledEventStatusType: ...
    def end_time(self) -> Union[None, str]: ...
    def type(self) -> ScheduledEventType: ...
    def entity_id(self) -> int: ...
    @property
    def metadata(self) -> ScheduledEventMetadata: ...
    def joined(self) -> int: ...
    def image(self, format: FormatType = ...): ...

class ScheduledEventMetadata:
    from_dict: Any
    def __init__(self, data: dict) -> None: ...
    @property
    def location(self) -> Union[str, None]: ...

class WelcomeScreen:
    from_dict: Any
    def __init__(self, data: dict) -> None: ...
    @property
    def description(self) -> str: ...
    def channels(self) -> list["WelcomeChannel"]: ...

class WelcomeChannel:
    from_dict: Any
    def __init__(self, data: dict) -> None: ...
    @property
    def channel_id(self) -> int: ...
    @property
    def description(self) -> str: ...
    def emoji_id(self) -> Union[int, None]: ...
    def emoji_name(self) -> Union[str, None]: ...
