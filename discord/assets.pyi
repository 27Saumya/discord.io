from typing import Any

from .enums import StickerFormatType as StickerFormatType
from .enums import StickerType as StickerType
from .state import ConnectionState as ConnectionState
from .types import Dict as Dict
from .user import User as User

class Emoji:
    from_dict: Any
    def __init__(self, data: Dict) -> None: ...
    @property
    def id(self) -> int: ...
    @property
    def name(self) -> str: ...
    @property
    def creator(self) -> User: ...
    def require_colons(self) -> bool: ...
    def managed(self) -> bool: ...
    def animated(self) -> bool: ...
    def available(self) -> bool: ...

class Sticker:
    from_dict: Any
    state: Any
    def __init__(self, data: dict, state: ConnectionState) -> None: ...
    @property
    def id(self) -> int: ...
    @property
    def pack(self) -> int: ...
    @property
    def name(self) -> str: ...
    def description(self) -> str: ...
    def tags(self) -> str: ...
    def type(self) -> StickerType: ...
    def format(self) -> StickerFormatType: ...
    def available(self) -> bool: ...
    def guild_id(self) -> int: ...
    def creator(self) -> User: ...
    def sort_value(self) -> int: ...
